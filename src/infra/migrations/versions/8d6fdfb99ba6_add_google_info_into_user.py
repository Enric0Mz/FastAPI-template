"""add google info into user

Revision ID: 8d6fdfb99ba6
Revises: d084e91baef1
Create Date: 2025-10-30 20:37:33.688176

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8d6fdfb99ba6"
down_revision: Union[str, Sequence[str], None] = "d084e91baef1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "sessions",
        "expires_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.TIMESTAMP(timezone=True),
        existing_nullable=False,
    )
    op.add_column("users", sa.Column("google_id", sa.String(length=100), nullable=True))
    op.add_column(
        "users",
        sa.Column("auth_provider", sa.String(), server_default="local", nullable=False),
    )
    op.alter_column(
        "users", "hashed_password", existing_type=sa.VARCHAR(length=97), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users", "hashed_password", existing_type=sa.VARCHAR(length=97), nullable=False
    )
    op.drop_column("users", "auth_provider")
    op.drop_column("users", "google_id")
    op.alter_column(
        "sessions",
        "expires_at",
        existing_type=sa.TIMESTAMP(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
